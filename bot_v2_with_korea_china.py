import logging
from aiogram import Bot, Dispatcher, executor, types
import aiohttp
import math
import os
from datetime import datetime

API_TOKEN = os.getenv("API_TOKEN")
logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

user_data = {}

# –¢–∞–±–ª–∏—Ü—ã —Å—Ç–∞–≤–æ–∫ –¥–ª—è –∞–≤—Ç–æ 3‚Äì5 –ª–µ—Ç (–µ–≤—Ä–æ –∑–∞ —Å–º3)
def get_customs_rate(volume):
    if volume <= 1000:
        return 1.5
    elif volume <= 1500:
        return 1.7
    elif volume <= 1800:
        return 2.5
    elif volume <= 2400:
        return 2.7
    elif volume <= 3000:
        return 3.0
    else:
        return 0

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã
async def get_currency_rate(code):
    url = "https://www.cbr-xml-daily.ru/daily_json.js"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            data = await response.json()
            return data["Valute"].get(code.upper(), {}).get("Value", 0)

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    user_data[message.from_user.id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üáØüáµ –Ø–ø–æ–Ω–∏—è", "üá∞üá∑ –Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è", "üá®üá≥ –ö–∏—Ç–∞–π")
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è:", reply_markup=markup)

@dp.message_handler(lambda m: m.text in ["üáØüáµ –Ø–ø–æ–Ω–∏—è", "üá∞üá∑ –Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è", "üá®üá≥ –ö–∏—Ç–∞–π"])
async def set_country(message: types.Message):
    user_data[message.from_user.id]["country"] = message.text
    await message.answer("–í–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–≤ –≤–∞–ª—é—Ç–µ —Å—Ç—Ä–∞–Ω—ã):", reply_markup=types.ReplyKeyboardRemove())

@dp.message_handler(lambda m: message.from_user.id in user_data and "price" not in user_data[message.from_user.id])
async def set_price(message: types.Message):
    try:
        price = float(message.text.replace(" ", "").replace(",", "."))
        user_data[message.from_user.id]["price"] = price
        await message.answer("–£–∫–∞–∂–∏ –º–∞—Ä–∫—É –∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è:")
    except:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞. –í–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ.")

@dp.message_handler(lambda m: message.from_user.id in user_data and "model" not in user_data[message.from_user.id])
async def set_model(message: types.Message):
    user_data[message.from_user.id]["model"] = message.text
    await message.answer("–£–∫–∞–∂–∏ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:")

@dp.message_handler(lambda m: message.from_user.id in user_data and "year" not in user_data[message.from_user.id])
async def set_year(message: types.Message):
    try:
        year = int(message.text)
        user_data[message.from_user.id]["year"] = year
        await message.answer("–£–∫–∞–∂–∏ –æ–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è (–≤ –ª–∏—Ç—Ä–∞—Ö):")
    except:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥. –í–≤–µ–¥–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2020")

@dp.message_handler(lambda m: message.from_user.id in user_data and "volume" not in user_data[message.from_user.id])
async def set_volume(message: types.Message):
    try:
        volume = float(message.text.replace(",", "."))
        uid = message.from_user.id
        data = user_data[uid]
        data["volume"] = volume

        volume_cm3 = int(volume * 1000)
        age = datetime.now().year - data["year"]

        if age < 3 or volume_cm3 > 3000:
            await message.answer("‚ö†Ô∏è –ú—ã —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ –æ—Ç 3 –¥–æ 5 –ª–µ—Ç –∏ –æ–±—ä—ë–º–æ–º –¥–æ 3.0 –ª")
            return

        customs_rate = get_customs_rate(volume_cm3)
        customs_fee_eur = volume_cm3 * customs_rate
        eur_rate = await get_currency_rate("EUR")
        customs_rub = customs_fee_eur * eur_rate + 5200 + 2200

        country = data["country"]
        model = data["model"]
        year = data["year"]
        price = data["price"]

        if country == "üáØüáµ –Ø–ø–æ–Ω–∏—è":
            jpy_rate = await get_currency_rate("JPY")
            full_yen = price + 164500
            total_rub = full_yen * jpy_rate + 30000 + 45000 + 55000 + customs_rub
            vlad_details = "(–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞, —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ, –ø–µ—Ä–µ–≥–æ–Ω, —É—Å–ª—É–≥–∏ —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–≥–æ –±—Ä–æ–∫–µ—Ä–∞)"
            response = f"üöó {model}, {year} –≥., {volume} –ª\n–°—Ç—Ä–∞–Ω–∞: –Ø–ø–æ–Ω–∏—è\n–¶–µ–Ω–∞: ¬•{int(price):,} | –ö—É—Ä—Å ¬•: {jpy_rate:.2f} ‚ÇΩ\n\n" \
                       f"üí¥ –†–∞—Å—Ö–æ–¥—ã –ø–æ –Ø–ø–æ–Ω–∏–∏:\n- –†–∞—Å—Ö–æ–¥—ã –ø–æ –Ø–ø–æ–Ω–∏–∏: ¬•50 000\n- –§—Ä–∞—Ö—Ç: ¬•50 000\n- –ü–†–†, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è: ¬•64 500\n\n" \
                       f"üõÉ –¢–∞–º–æ–∂–µ–Ω–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: {int(customs_rub):,} ‚ÇΩ\n\n" \
                       f"üì¶ –†–∞—Å—Ö–æ–¥—ã –ø–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫—É\n{vlad_details}:\n- 45 000 ‚ÇΩ\n\nüíº –ö–æ–º–∏—Å—Å–∏—è JPCARS: 55 000 ‚ÇΩ\n\n‚úÖ –ò–¢–û–ì–û: {math.ceil(total_rub / 1000) * 1000:,} ‚ÇΩ"

        elif country == "üá∞üá∑ –Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è":
            krw_rate = await get_currency_rate("KRW")
            total_won = price + 1_640_000
            total_rub = total_won * krw_rate + 50000 + 100000 + 65000 + customs_rub
            vlad_details = "(—ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞, –≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è, –ø–æ–≥—Ä—É–∑–æ—á–Ω–æ-—Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã, –≠–ü–¢–°, –°–ë–ö–¢–°, —É—Å–ª—É–≥–∏ —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–≥–æ –±—Ä–æ–∫–µ—Ä–∞, –ø–µ—Ä–µ–≥–æ–Ω)"
            response = f"üöó {model}, {year} –≥., {volume} –ª\n–°—Ç—Ä–∞–Ω–∞: –Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è\n–¶–µ–Ω–∞: ‚Ç©{int(price):,} | –ö—É—Ä—Å ‚Ç©: {krw_rate:.3f} ‚ÇΩ\n\n" \
                       f"üí¥ –†–∞—Å—Ö–æ–¥—ã –ø–æ –ö–æ—Ä–µ–µ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞: ‚Ç©1 640 000\n\n" \
                       f"üõÉ –¢–∞–º–æ–∂–µ–Ω–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: {int(customs_rub):,} ‚ÇΩ\n\n" \
                       f"üì¶ –†–∞—Å—Ö–æ–¥—ã –ø–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫—É\n{vlad_details}:\n- 100 000 ‚ÇΩ\n\nüíº –ö–æ–º–∏—Å—Å–∏—è JPCARS: 65 000 ‚ÇΩ\n\n‚úÖ –ò–¢–û–ì–û: {math.ceil(total_rub / 1000) * 1000:,} ‚ÇΩ"

        elif country == "üá®üá≥ –ö–∏—Ç–∞–π":
            cny_rate = await get_currency_rate("CNY")
            total_cny = price + 20000
            total_rub = total_cny * cny_rate + 50000 + 110000 + 65000 + customs_rub
            vlad_details = "(—ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞, –≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è, –ø–æ–≥—Ä—É–∑–æ—á–Ω–æ-—Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã, –≠–ü–¢–°, –°–ë–ö–¢–°, —É—Å–ª—É–≥–∏ —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–≥–æ –±—Ä–æ–∫–µ—Ä–∞, –ø–µ—Ä–µ–≥–æ–Ω)"
            response = f"üöó {model}, {year} –≥., {volume} –ª\n–°—Ç—Ä–∞–Ω–∞: –ö–∏—Ç–∞–π\n–¶–µ–Ω–∞: ¬•{int(price):,} | –ö—É—Ä—Å ¬•: {cny_rate:.2f} ‚ÇΩ\n\n" \
                       f"üí¥ –†–∞—Å—Ö–æ–¥—ã –ø–æ –ö–∏—Ç–∞—é –∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –£—Å—Å—É—Ä–∏–π—Å–∫–∞: ¬•20 000\n\n" \
                       f"üõÉ –¢–∞–º–æ–∂–µ–Ω–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: {int(customs_rub):,} ‚ÇΩ\n\n" \
                       f"üì¶ –†–∞—Å—Ö–æ–¥—ã –ø–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫—É\n{vlad_details}:\n- 110 000 ‚ÇΩ\n\nüíº –ö–æ–º–∏—Å—Å–∏—è JPCARS: 65 000 ‚ÇΩ\n\n‚úÖ –ò–¢–û–ì–û: {math.ceil(total_rub / 1000) * 1000:,} ‚ÇΩ"

        else:
            response = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞."

        await message.answer(response.replace(",", " "))
    except:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä—ë–º. –í–≤–µ–¥–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 1.5, 2.0 –∏ —Ç.–¥.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
